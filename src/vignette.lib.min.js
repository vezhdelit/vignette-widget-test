(function() {

    let apiKey = '';

    const countries = [
        { iso: 'at', name: 'Austria' },
        { iso: 'ch', name: 'Switzerland' },
        { iso: 'si', name: 'Slovenia' },
        { iso: 'hu', name: 'Hungary' },
        { iso: 'sk', name: 'Slovakia' },
        { iso: 'cz', name: 'Czechia' },
        { iso: 'ro', name: 'Romania' },
        { iso: 'bg', name: 'Bulgaria' },
        { iso: 'md', name: 'Moldova' },
    ];
    const carTypes = [
        {
            name: 'Car',
            type: '2a',
        },
        {
            name: 'Motorcycle',
            type: '1m',
        },
        {
            name: 'Van',
            type: '2b',
        },
    ];
    const order = {
        terms_and_privacy_accepted: true,
        order_has_been_paid: true,
        email: 'user@example.com',
        user: [
            {
                email: 'user@example.com',
                user_name: 'John Smith',
                passport_number: 'FP123452',
            },
        ],
        cars: [
            {
                country: 'ua',
                plate: '',
                vin_code: 'VWT045FD9812VB341',
            },
        ],
        products: [
            {
                custom_id: '',
                name: '',
                start_date: 0,
                period: 0,
            },
        ],
        interchange_fee: {
            amount: 0.33,
            currency: 'EUR',
        },
    };
    const active = {
        country: {
            iso: 'at',
        },
        car: {
            type: '2a',
        },
        product: {
            name: '',
        },
    };

    // Create Function

    function createElementWithClass(
        element,
        classElement = '',
        appendIn = false,
        productInfo,
        eventClick,
    ) {
        const elem = document.createElement(element);
        elem.className = classElement;
        if (eventClick) {
            if (element == 'input') {
                elem.addEventListener('input', (event) => {
                    eventClick(event);
                });
            } else {
                elem.addEventListener('click', (event) => {
                    eventClick(productInfo, event);
                });
            }
        }
        if (appendIn) {
            return appendIn.appendChild(elem);
        } else {
            return elem;
        }
    }

    function createCountryBlock(countries, appendIn) {
        countries.forEach((country) => {
            const countryBlock = createElementWithClass(
                'div',
                `countryBlock ${country.iso == active.country.iso ? 'active' : ''}`,
                appendIn,
                country,
                onChangeCountry,
            );
            countryBlock.textContent = country.name;
        });
    }

    function createCarTypes(appendIn) {
        const carTypesWrapper = createElementWithClass('div', 'vignette-car-types-wrapper');
        carTypes.forEach((car) => {
            const card = createElementWithClass(
                'div',
                `vignette-cards-item ${car.type == active.car.type ? 'active' : ''}`,
                carTypesWrapper,
                car,
                selectCarType,
            );
            const cardTitle = createElementWithClass('h2', '', card);
            cardTitle.textContent = car.name;
        });
        appendIn.appendChild(carTypesWrapper);
    }
    async function createPriceElements(data) {
        const priceRow = document.querySelector('.vignette-price-row');
        priceRow.innerHTML = ''; // Очистка існуючих карток цін
        const product = data.result.filter((item) => {
            return item.name.includes(active.car.type);
        })[0];
        active.product.name = product.name;
        const transformedArray = Object.entries(product.price).map(([days, details]) => ({
            days: parseInt(days, 10),
            ...details,
        }));
        transformedArray.forEach((product) => {
            const priceItem = createElementWithClass(
                'div',
                'vignette-price-item',
                priceRow,
                product,
                selectPrice,
            );
            priceItem.textContent = `${product.days}Days - ${product.total_price + product.currency}`;
        });
    }

    function updateInputVin(iso) {
        const cardsRow = document.querySelector('.vignette-car-info-row');
        const input = document.querySelector('.vignette-input-car-vin');
        if ((iso == 'ro' || iso == 'md') && !input) {
            const inputVin = createElementWithClass(
                'input',
                'vignette-input-car-vin',
                cardsRow,
                {},
                changeVinInput,
            );
            inputVin.placeholder = 'Vin-code of the car';
        } else if (input && iso !== 'ro' && iso !== 'md') {
            input.remove();
        }
    }

    // Main Create
    function createCardsWrapper(elementId) {
        const container = document.getElementById(elementId);
        const section = createElementWithClass('div', 'vignette-section');
        createElementWithClass('h2', 'vignette-line', section).textContent = 'Choose Country';
        const selectWrapper = createElementWithClass('div', 'vignette-select-wrapper', section);
        createElementWithClass('h2', 'vignette-line', section).textContent =
            'Information About The Car';
        const cardsRow = createElementWithClass('div', 'vignette-car-info-row', section);
        createCarTypes(cardsRow);
        const input = createElementWithClass(
            'input',
            'vignette-input-car-number',
            cardsRow,
            {},
            changeNumberInput,
        );

        input.type = 'text';
        input.placeholder = 'Number of the car';
        createElementWithClass('h2', 'vignette-line', section).textContent = 'Vignette';
        const price = createElementWithClass('div', 'vignette-price-row', section);
        const buyRow = createElementWithClass('div', 'vignette-buy-row', section);
        const buyButton = createElementWithClass(
            'div',
            'vignette-buy-btn vignette-btn',
            buyRow,
            order,
            createOrder,
        );
        buyButton.textContent = 'Buy';
        createCountryBlock(countries, selectWrapper);
        container.appendChild(section);
    }

    // Event Function
    async function selectCarType(car, event) {
        active.car.type = car.type;
        document.querySelectorAll('.vignette-cards-item').forEach((element) => {
            element.classList.remove('active');
        });
        if (event.target.className !== 'vignette-cards-item') {
            event.target.parentNode.classList.add('active');
        } else {
            event.target.classList.add('active');
        }
        await fetchData(active.country.iso);
    }
    function changeNumberInput(event) {
        order.cars[0].plate = event.target.value;
    }
    function changeVinInput(event) {
        order.cars[0].vin_code = event.target.value;
    }
    async function selectPrice(price, event) {
        order.products[0].period = price.days;
        order.interchange_fee.amount = price.total_price;
        order.interchange_fee.currency = price.currency;
        document.querySelectorAll('.vignette-price-item').forEach((element) => {
            element.classList.remove('active');
        });
        event.target.classList.add('active');
    }

    async function onChangeCountry(selectedCountry, event) {
        try {
            document.querySelectorAll('.countryBlock').forEach((element) => {
                element.classList.remove('active');
            });
            event.target.classList.add('active');
            active.country.iso = selectedCountry.iso;
            updateInputVin(selectedCountry.iso);
            await fetchData(active.country.iso);
        } catch (error) {
            console.error('Error:', error);
        }
    }

    // Api

    async function fetchData(country = 'at') {
        try {
            const response = await fetch(
                `https://sandbox-api.vignette.id/public/products?country=${country}&type=vignette&currency=UAH`,
                {
                    method: 'GET',
                    headers: {
                        Authorization: `Bearer ${apiKey}`,
                    },
                },
            );
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            const data = await response.json();
            createPriceElements(data);
            return data;
        } catch (error) {
            console.error('Error fetching data:', error);
            throw error;
        }
    }
    async function createOrder(order) {
        order.products[0].custom_id = self.crypto.randomUUID();
        order.products[0].start_date = Math.floor(Date.now() / 1000);
        order.products[0].name = active.product.name;
        try {
            const response = await fetch(`https://sandbox-api.vignette.id/public/orders`, {
                method: 'POST',
                headers: {
                    Authorization: `Bearer ${apiKey}`,
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(order),
            });
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            const data = await response.json();
        } catch (error) {
            console.error('Error fetching data:', error);
            throw error;
        }
    }

    // Expose the init function to the global scope
    window.myCompanyApi = {
        init: function(elementId, key) {
            apiKey = key;
            createCardsWrapper(elementId);
        }
    };
})();